FROM nvcr.io/nvidia/l4t-base:r32.2
RUN apt-get update -y && apt-get upgrgade
RUN apt-get install python3-pip -y
RUN pip3 install -U pip
RUN dependencies=(build-essential \
              cmake \
              pkg-config \
              libavcodec-dev \
              libavformat-dev \
              libswscale-dev \
              libv4l-dev \
              libxvidcore-dev \
              libavresample-dev \
              python3-dev \
              libtbb2 \
              libtbb-dev \
              libtiff-dev \
              libjpeg-dev \
              libpng-dev \
              libtiff-dev \
              libdc1394-22-dev \
              libgtk-3-dev \
              libcanberra-gtk3-module \
              libatlas-base-dev \
              gfortran \
              wget \
              unzip) && \
    apt install -y ${dependencies[@]}
RUN wget https://github.com/opencv/opencv/archive/4.5.2.zip -O opencv-4.5.2.zip && \
    wget https://github.com/opencv/opencv_contrib/archive/4.5.2.zip -O opencv_contrib-4.5.2.zip && \
    unzip opencv-4.5.2.zip && \
    unzip opencv_contrib-4.5.2.zip && \
    mkdir opencv-4.5.2/build && \
    cd opencv-4.5.2/build && \
    cmake -D CMAKE_BUILD_TYPE=RELEASE \
        -D WITH_CUDA=ON \
        -D CUDA_ARCH_PTX="" \
        -D CUDA_ARCH_BIN="5.3,6.2,7.2" \
        -D WITH_CUBLAS=ON \
        -D WITH_LIBV4L=ON \
        -D BUILD_opencv_python3=ON \
        -D BUILD_opencv_python2=OFF \
        -D BUILD_opencv_java=OFF \
        -D WITH_GSTREAMER=OFF \
        -D WITH_GTK=ON \
        -D BUILD_TESTS=OFF \
        -D BUILD_PERF_TESTS=OFF \
        -D BUILD_EXAMPLES=OFF \
        -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib-4.5.2/modules \
        .. && \
    make -j4 && \
    sudo make install && \
    python3 -c "import cv2; print(cv2.__version__)" && \
    cd ..
RUN sudo apt-get -y install autoconf bc build-essential g++-8 gcc-8 clang-8 lld-8 gettext-base gfortran-8 iputils-ping libbz2-dev libc++-dev libcgal-dev libffi-dev libfreetype6-dev libhdf5-dev libjpeg-dev liblzma-dev libncurses5-dev libncursesw5-dev libpng-dev libreadline-dev libssl-dev libsqlite3-dev libxml2-dev libxslt-dev locales moreutils openssl python-openssl rsync scons python3-pip libopenblas-dev
RUN export TORCH_INSTALL=https://developer.download.nvidia.cn/compute/redist/jp/v51/pytorch/torch-1.14.0a0+44dac51c.nv23.02-cp38-cp38-linux_aarch64.whl
RUN python3 -m pip install --upgrade pip; python3 -m pip install aiohttp numpy=='1.19.4' scipy=='1.5.3' export "LD_LIBRARY_PATH=/usr/lib/llvm-8/lib:$LD_LIBRARY_PATH"; python3 -m pip install --upgrade protobuf; python3 -m pip install --no-cache $TORCH_INSTALL
WORKDIR /usr/src/FactoryVisionAI
COPY requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt
COPY . .
EXPOSE 80
CMD ["python3", "app/app.py"]
